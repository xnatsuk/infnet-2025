// <auto-generated />
using System;
using AppTurismo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppTurismo.Migrations
{
    [DbContext(typeof(AppTurismoContext))]
    partial class AppTurismoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("AppTurismo.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT")
                        .HasColumnName("Email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("IX_Clients_Email");

                    b.ToTable("Clients", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "joao.silva@email.com",
                            Name = "João Silva"
                        },
                        new
                        {
                            Id = 2,
                            Email = "maria.oliveira@email.com",
                            Name = "Maria Oliveira"
                        },
                        new
                        {
                            Id = 3,
                            Email = "carlos.souza@email.com",
                            Name = "Carlos Souza"
                        },
                        new
                        {
                            Id = 4,
                            Email = "ana.paula@email.com",
                            Name = "Ana Paula"
                        },
                        new
                        {
                            Id = 5,
                            Email = "lucas.pereira@email.com",
                            Name = "Lucas Pereira"
                        },
                        new
                        {
                            Id = 6,
                            Email = "fernanda.costa@email.com",
                            Name = "Fernanda Costa"
                        },
                        new
                        {
                            Id = 7,
                            Email = "roberto.santos@email.com",
                            Name = "Roberto Santos"
                        },
                        new
                        {
                            Id = 8,
                            Email = "juliana.lima@email.com",
                            Name = "Juliana Lima"
                        },
                        new
                        {
                            Id = 9,
                            Email = "pedro.alves@email.com",
                            Name = "Pedro Alves"
                        },
                        new
                        {
                            Id = 10,
                            Email = "carla.mendes@email.com",
                            Name = "Carla Mendes"
                        });
                });

            modelBuilder.Entity("AppTurismo.Models.Destination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT")
                        .HasColumnName("Country");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("Name", "Country")
                        .IsUnique()
                        .HasDatabaseName("IX_Destinations_Name_Country");

                    b.ToTable("Destinations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Country = "França",
                            Name = "Paris"
                        },
                        new
                        {
                            Id = 2,
                            Country = "Itália",
                            Name = "Roma"
                        },
                        new
                        {
                            Id = 3,
                            Country = "Reino Unido",
                            Name = "Londres"
                        },
                        new
                        {
                            Id = 4,
                            Country = "Espanha",
                            Name = "Barcelona"
                        },
                        new
                        {
                            Id = 5,
                            Country = "Estados Unidos",
                            Name = "Nova York"
                        },
                        new
                        {
                            Id = 6,
                            Country = "Estados Unidos",
                            Name = "Los Angeles"
                        },
                        new
                        {
                            Id = 7,
                            Country = "Japão",
                            Name = "Tóquio"
                        },
                        new
                        {
                            Id = 8,
                            Country = "Austrália",
                            Name = "Sydney"
                        },
                        new
                        {
                            Id = 9,
                            Country = "Brasil",
                            Name = "Rio de Janeiro"
                        },
                        new
                        {
                            Id = 10,
                            Country = "Argentina",
                            Name = "Buenos Aires"
                        },
                        new
                        {
                            Id = 11,
                            Country = "Tailândia",
                            Name = "Bangkok"
                        },
                        new
                        {
                            Id = 12,
                            Country = "Emirados Árabes",
                            Name = "Dubai"
                        });
                });

            modelBuilder.Entity("AppTurismo.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BookingDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("BookingDate")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("DeletedAt");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<int>("VacationPackageId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BookingDate")
                        .HasDatabaseName("IX_Reservations_BookingDate");

                    b.HasIndex("ClientId")
                        .HasDatabaseName("IX_Reservations_ClientId");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_Reservations_IsDeleted");

                    b.HasIndex("VacationPackageId")
                        .HasDatabaseName("IX_Reservations_VacationPackageId");

                    b.HasIndex("ClientId", "VacationPackageId")
                        .IsUnique();

                    b.ToTable("Reservations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookingDate = new DateTime(2025, 6, 1, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            ClientId = 1,
                            IsDeleted = false,
                            VacationPackageId = 1
                        },
                        new
                        {
                            Id = 2,
                            BookingDate = new DateTime(2025, 6, 2, 14, 15, 0, 0, DateTimeKind.Unspecified),
                            ClientId = 2,
                            IsDeleted = false,
                            VacationPackageId = 1
                        },
                        new
                        {
                            Id = 3,
                            BookingDate = new DateTime(2025, 6, 5, 9, 45, 0, 0, DateTimeKind.Unspecified),
                            ClientId = 3,
                            IsDeleted = false,
                            VacationPackageId = 2
                        },
                        new
                        {
                            Id = 4,
                            BookingDate = new DateTime(2025, 6, 10, 16, 20, 0, 0, DateTimeKind.Unspecified),
                            ClientId = 4,
                            IsDeleted = false,
                            VacationPackageId = 3
                        },
                        new
                        {
                            Id = 5,
                            BookingDate = new DateTime(2025, 6, 15, 11, 10, 0, 0, DateTimeKind.Unspecified),
                            ClientId = 5,
                            IsDeleted = false,
                            VacationPackageId = 4
                        },
                        new
                        {
                            Id = 6,
                            BookingDate = new DateTime(2025, 6, 18, 13, 30, 0, 0, DateTimeKind.Unspecified),
                            ClientId = 6,
                            IsDeleted = false,
                            VacationPackageId = 1
                        },
                        new
                        {
                            Id = 7,
                            BookingDate = new DateTime(2025, 6, 20, 8, 50, 0, 0, DateTimeKind.Unspecified),
                            ClientId = 7,
                            IsDeleted = false,
                            VacationPackageId = 5
                        },
                        new
                        {
                            Id = 8,
                            BookingDate = new DateTime(2025, 6, 22, 15, 40, 0, 0, DateTimeKind.Unspecified),
                            ClientId = 8,
                            DeletedAt = new DateTime(2025, 6, 23, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = true,
                            VacationPackageId = 2
                        });
                });

            modelBuilder.Entity("AppTurismo.Models.VacationPackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxCapacity")
                        .HasColumnType("INTEGER")
                        .HasColumnName("MaxCapacity");

                    b.Property<decimal>("Price")
                        .HasColumnType("DECIMAL(10,2)")
                        .HasColumnName("Price");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("StartDate");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.HasIndex("Price")
                        .HasDatabaseName("IX_VacationPackages_Price");

                    b.HasIndex("StartDate")
                        .HasDatabaseName("IX_VacationPackages_StartDate");

                    b.HasIndex("Title")
                        .HasDatabaseName("IX_VacationPackages_Title");

                    b.ToTable("VacationPackages", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaxCapacity = 20,
                            Price = 3500.00m,
                            StartDate = new DateTime(2025, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Europa Clássica"
                        },
                        new
                        {
                            Id = 2,
                            MaxCapacity = 15,
                            Price = 4200.00m,
                            StartDate = new DateTime(2025, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "América do Norte"
                        },
                        new
                        {
                            Id = 3,
                            MaxCapacity = 10,
                            Price = 5000.00m,
                            StartDate = new DateTime(2025, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Ásia Moderna"
                        },
                        new
                        {
                            Id = 4,
                            MaxCapacity = 25,
                            Price = 1800.00m,
                            StartDate = new DateTime(2025, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Brasil Maravilhoso"
                        },
                        new
                        {
                            Id = 5,
                            MaxCapacity = 12,
                            Price = 6500.00m,
                            StartDate = new DateTime(2025, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Oceania Aventura"
                        },
                        new
                        {
                            Id = 6,
                            MaxCapacity = 8,
                            Price = 4800.00m,
                            StartDate = new DateTime(2025, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Oriente Médio Luxo"
                        });
                });

            modelBuilder.Entity("VacationPackageDestinations", b =>
                {
                    b.Property<int>("VacationPackageId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DestinationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("VacationPackageId", "DestinationId");

                    b.HasIndex("DestinationId");

                    b.ToTable("VacationPackageDestinations", (string)null);

                    b.HasData(
                        new
                        {
                            VacationPackageId = 1,
                            DestinationId = 1
                        },
                        new
                        {
                            VacationPackageId = 1,
                            DestinationId = 2
                        },
                        new
                        {
                            VacationPackageId = 1,
                            DestinationId = 3
                        },
                        new
                        {
                            VacationPackageId = 1,
                            DestinationId = 4
                        },
                        new
                        {
                            VacationPackageId = 2,
                            DestinationId = 5
                        },
                        new
                        {
                            VacationPackageId = 2,
                            DestinationId = 6
                        },
                        new
                        {
                            VacationPackageId = 3,
                            DestinationId = 7
                        },
                        new
                        {
                            VacationPackageId = 3,
                            DestinationId = 11
                        },
                        new
                        {
                            VacationPackageId = 4,
                            DestinationId = 9
                        },
                        new
                        {
                            VacationPackageId = 5,
                            DestinationId = 8
                        },
                        new
                        {
                            VacationPackageId = 6,
                            DestinationId = 12
                        });
                });

            modelBuilder.Entity("AppTurismo.Models.Reservation", b =>
                {
                    b.HasOne("AppTurismo.Models.Client", "Client")
                        .WithMany("Reservations")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Client_Reservations");

                    b.HasOne("AppTurismo.Models.VacationPackage", "VacationPackage")
                        .WithMany("Reservations")
                        .HasForeignKey("VacationPackageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("VacationPackage");
                });

            modelBuilder.Entity("VacationPackageDestinations", b =>
                {
                    b.HasOne("AppTurismo.Models.Destination", null)
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppTurismo.Models.VacationPackage", null)
                        .WithMany()
                        .HasForeignKey("VacationPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AppTurismo.Models.Client", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("AppTurismo.Models.VacationPackage", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
